task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/*_Impl*',
                      '**/**Module**',
                      '**/**Fragment**',
                      '**/DAO**',
                      '**/component**',
                      '**/aplication**',
                      '**/**_Factory**',
                      '**/**Activity**',
                      '**/WalletApplication*',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/data',
                      '**/TextWatcherCryptoInput**',
                      '**/**Adapter**',
                      '**/MarketType**',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*Module_*Factory.class']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/androidTest/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree], [kotlinDebugTree])

    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec"
    ])
}